Tutorial completo para execução do trabalho LabRedes
====================================================

Comandos marcados como *PowerShell* devem ser executados no host
Windows; comandos marcados como *bash* são rodados dentro dos contêineres.

ETAPA 0 – Baixar a imagem
------------------------
Terminal 1:
```
docker pull ghcr.io/sjohann81/labredes:latest
```

ETAPA 1 – Levantar o servidor (proxy)
------------------------------------
Terminal 1:
```
docker run -d --name proxy --privileged --network host --device /dev/net/tun ^
           -v ${PWD}:/work -w /work ghcr.io/sjohann81/labredes:latest sleep infinity
```
Entrar no contêiner e compilar o túnel:
```
docker exec -it proxy bash
```
Bash (no contêiner):
```
cd traffic_tunnel
make
ip -4 addr show eth0      # anote o valor após "inet" (ex.: 192.168.65.3)
# executar em modo servidor  (substitua <IP_ETH0>)
./traffic_tunnel eth0 -s <IP_ETH0>
```
O comando acima **fica rodando**; abra um novo terminal do host para a
próxima etapa.

ETAPA 2 – Iniciar o monitor de tráfego
-------------------------------------
Terminal 2:
```
docker exec -it proxy bash
```
Bash:
```
export LOG_DIR=/work/logs
mkdir -p "$LOG_DIR"
python3 src/monitor.py tun0
```
A interface curses mostrará os contadores L2/L3/L4 e os CSV serão
preenchidos em tempo real em `logs/`.

ETAPA 3 – Levantar um cliente
----------------------------
Terminal 3:
```
docker run -d --name client1 --privileged --device /dev/net/tun ^
           -v ${PWD}:/work -w /work ghcr.io/sjohann81/labredes:latest sleep infinity
```
Entrar no contêiner do cliente:
```
docker exec -it client1 bash
```
Bash (cliente):
```
cd traffic_tunnel
make
ip -4 addr show eth0                 # anote <IP_ETH0_CLIENTE> 
./traffic_tunnel eth0 -c <IP_ETH0_CLIENTE> -t client1.sh
```
O processo cria `tun0` com IP 172.31.66.101/24 e troca a rota default
para 172.31.66.1 (proxy).

ETAPA 4 – Gerar tráfego de teste
--------------------------------
Abra outro shell dentro do cliente:
```
docker exec -it client1 bash
```
Bash:
```
# Exemplo com ICMP
ping -c 5 -I tun0 8.8.8.8
# Exemplo com TCP (HTTP)
curl --interface tun0 http://example.com
```
Cada pacote vai atravessar o túnel e aparecer no monitor do proxy.

ETAPA 5 – Verificando pacotes manualmente (opcional)
---------------------------------------------------
Dentro do proxy (Terminal 1):
```
docker exec -it proxy bash -c "tcpdump -n -i tun0 -c 20 | cat"
```

ETAPA 6 – Adicionar mais clientes (opcional)
-------------------------------------------
Repita a ETAPA 3 trocando o nome do contêiner (`client2`) e usando
`-t client2.sh`. O script atribui IP 172.31.66.102/24 à nova `tun0`.